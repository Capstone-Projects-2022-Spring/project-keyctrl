{"version":3,"sources":["utils/apiUtils.js","components/TypingTestPage/TypingTest.js","utils/useForm.js","utils/validateInfo.js","components/Base/TitleBar/SignInModal/SignInModal.js","components/Base/TitleBar/TitleBar.js","components/SettingsPage/ColoredLine.js","components/Base/TaskBar/TaskBar.js","components/AccountPage/SingleStatDisplay.js","assets/keyboard_shell.png","components/AccountPage/StatKeyboard.js","components/AccountPage/Account.js","components/AccountPage/OfflineAccount.js","components/TrainingPage/Training.js","components/SettingsPage/AccountTile.js","components/SettingsPage/SettingsLoginTile.js","components/SettingsPage/ThemeSelect.js","components/SettingsPage/Settings.js","components/Base/LoadingSpinner/LoadingSpinner.js","components/MultiplayerPage/Lobby.js","components/MultiplayerPage/Modal.js","components/MultiplayerPage/Multiplayer.js","App.js","reportWebVitals.js","index.js"],"names":["rp","require","account","account_id","display_name","user_email","photo","avg_wpm","top_wpm","letter_misses","total_words","total_time","callRegisterAccount","email","options","method","headers","url","body","JSON","stringify","then","acc","console","log","info","parse","getStats","finally","catch","err","updateStats","avgWPM","topWPM","letterMisses","totalWords","totalTime","id","res","TypingTest","props","useState","staticCountdown","setStaticCountdown","countdown","setCountdown","choppedCurrentLine","setChoppedCurrentLine","lineIndex","setLineIndex","timer","setTimer","timerActive","setTimerActive","countdownToggleChecked","inCountdown","setInCountdown","currentLineLength","setCurrentLineLength","randomWords","setCurrentRandomWords","nextUpRandomWords","setNextUpRandomWords","randWordsFunc","newWords","startingLine","getNewWordsLine","nextUpLine","chopLineToLength","reset","setIndex","useEffect","setCount","count","wordString","trimmedString","substring","lastIndex","lastIndexOf","words","exactly","join","letters","length","document","addEventListener","onKeyPress","setUpdateOnce","removeEventListener","event","key","index","loggedIn","incrementMissed","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","setNumEntries","setWPMTime","className","style","color","textShadow","onClick","numEntries","grossWPM","split","map","char","idx","useForm","validate","username","password","password2","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","Object","keys","handleChange","e","target","name","value","handleSubmit","preventDefault","validateInfo","trim","test","SignInModal","onLogin","showSignIn","setShowSignIn","modalRef","showSignUp","login","api","keyPress","useCallback","responseGoogle","response","profileObj","ref","div","prev","clientId","buttonText","onSuccess","onFailure","cookiePolicy","TitleBar","openSignIn","ColoredLine","width","backgroundColor","height","border","TaskBar","page","setPage","setShowFriendList","showFriendList","to","filter","SingleStatDisplay","title","data","StatKeyboard","max","getColor","ratio","Number","MIN_SAFE_INTEGER","el","src","Image","Account","accountInfo","jObj","entries","sort","a","b","sortedMisses","toFixed","toUpperCase","OfflineAccount","Training","AccountTile","logout","SettingsLoginTile","padding","ThemeContainer","styled","ThemeTitle","BaseThemeBox","background","text","ChangeTheme","StyledPopup","Popup","ThemeSelect","documentElement","getAttribute","themeName","setThemeName","changeTheme","theme","setAttribute","trigger","position","modal","closeOnDocumentClick","Settings","setShowThemeOptions","LoadingSpinner","type","timeout","Lobby","lobbyID","message","state","setState","chat","setChat","socketRef","io","connect","emit","on","newLobby","room","disconnect","onTextChange","onSubmit","TextField","onChange","label","variant","Modal","setShowModal","setJoinLobby","setLobbyID","ReactDom","createPortal","getElementById","Button","button","Multiplayer","joinLobby","showModal","css","App","loading","setLoading","setLoggedIn","WPMTime","setAccountInfo","updateOnce","ms","Promise","setTimeout","alert","topWpm","updateAccInfo","totWords","totTime","updateApiStats","emptyForNow","exact","path","element","letter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ddd15947.chunk.js","sourcesContent":["const request = require('postman-request');\r\nconst rp = require('request-promise');\r\n\r\nvar account = {\r\n    account_id: -1,//When account_id != -1, App.js setAccountInfo(account) setLoggedIn(true)\r\n    display_name: \"\",\r\n    user_email: \"\",\r\n    photo: -1,\r\n    avg_wpm: -1,\r\n    top_wpm: -1,\r\n    letter_misses: \"\",\r\n    total_words: -1,\r\n    total_time: -1\r\n};\r\n\r\n\r\nexport function callLogin(email) {\r\n    account = {\r\n        account_id: -1,\r\n        display_name: \"\",\r\n        user_email: \"\",\r\n        photo: -1\r\n    };\r\n\r\n    var options = {\r\n        url: 'https://9x38qblue2.execute-api.us-east-1.amazonaws.com/dev/login?email='\r\n        + email\r\n    };\r\n\r\n    rp(options)\r\n        .then(function(acc){\r\n            console.log(acc);\r\n            if(acc != \"Fail\"){//instead of invalid, \"does not exist\"\r\n                var info = JSON.parse(acc);\r\n                account.account_id = info[0].account_id;\r\n                account.display_name = info[0].display_name;\r\n                account.user_email = info[0].user_email;\r\n                account.photo = info[0].photo;\r\n                console.log(account);\r\n                getStats(account.account_id);\r\n            }else{ \r\n                callRegisterAccount(email);// if it returns invalid login recentials, it registers the account\r\n            }\r\n        })\r\n        .finally(function(){\r\n            console.log(account);\r\n        })\r\n        .catch(function (err) {\r\n    \r\n    });\r\n    return account;\r\n\r\n}\r\n\r\nexport function callRegisterAccount(email) {\r\n    account = {\r\n        account_id: -1,\r\n        display_name: \"\",\r\n        user_email: \"\",\r\n        photo: -1\r\n    };\r\n    var options = {\r\n        method: 'POST',\r\n        headers: {'Content-Type' : 'application/x-www-form-urlencoded'},\r\n        url: 'https://9x38qblue2.execute-api.us-east-1.amazonaws.com/dev/signup',\r\n        body: JSON.stringify( {\r\n        \"email\": email,\r\n        })\r\n    };\r\n\r\n    rp(options)\r\n        .then(function(acc){\r\n            console.log(acc);\r\n            var info = JSON.parse(acc);\r\n            account.account_id = info[0].account_id;\r\n            account.display_name = info[0].display_name;\r\n            account.user_email = info[0].user_email;\r\n            account.photo = info[0].photo;\r\n            getStats(account.account_id);\r\n            console.log(account);\r\n        })\r\n        .finally(function(){\r\n            console.log(account);\r\n        })\r\n        .catch(function (err) {\r\n\r\n    });\r\n    return account;\r\n}\r\n\r\nexport function updateStats(avgWPM, topWPM, letterMisses, totalWords, totalTime, id) {\r\n    var options = {\r\n        method: 'POST',\r\n        headers: {'Content-Type' : 'application/x-www-form-urlencoded'},\r\n        url: 'https://9x38qblue2.execute-api.us-east-1.amazonaws.com/dev/updatestats',\r\n        body: JSON.stringify( {\r\n            \"accID\": id,\r\n            \"avgWPM\": avgWPM,\r\n            \"topWPM\": topWPM,\r\n            \"letterMisses\": letterMisses,\r\n            \"totalWords\": totalWords,\r\n            \"totalTime\": totalTime\r\n        })\r\n    };\r\n\r\n    rp(options)\r\n        .then(function(res){\r\n            console.log(res);\r\n            // var info = JSON.parse(acc);\r\n            // account.account_id = info[0].account_id;\r\n            // account.display_name = info[0].display_name;\r\n            // account.user_email = info[0].user_email;\r\n            // account.password = info[0].password;\r\n            // account.photo = info[0].photo;\r\n            // console.log(account);\r\n        })\r\n        .finally(function(){\r\n            console.log(options);\r\n        })\r\n        .catch(function (err) {\r\n\r\n    });\r\n    return account;\r\n}\r\n\r\nexport function getStats(id) {\r\n\r\n    var options = {\r\n        url: 'https://9x38qblue2.execute-api.us-east-1.amazonaws.com/dev/getstatbyid?accId=' + id\r\n    };\r\n\r\n    rp(options)\r\n        .then(function(acc){\r\n            console.log(acc);\r\n            var info = JSON.parse(acc);\r\n            account.avg_wpm = info[0].avg_wpm;\r\n            account.top_wpm = info[0].top_wpm;\r\n            account.letter_misses = info[0].letter_misses;\r\n            account.total_words = info[0].total_words;\r\n            account.total_time = info[0].total_time;\r\n            console.log(account);\r\n        \r\n        })\r\n        .finally(function(){\r\n            console.log(account);\r\n        })\r\n        .catch(function (err) {\r\n    \r\n    });\r\n    return account;\r\n}","import { useState, useEffect, useRef } from \"react\";\r\nimport '../../styles/TypingTest.css'\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\"\r\nimport * as api from '../../utils/apiUtils.js'\r\n\r\n/**\r\n * @module TypingTest \r\n * */\r\n\r\n\r\n/**\r\n * Component for displaying typing test.\r\n * @component TypingTest\r\n * @param {any} props contains list of all props needed for typing test\r\n * @description Typing test component that displays and runs the game\r\n * @returns Component to be displayed\r\n * \r\n * @example\r\n * <TypingTest\r\n          timerActive={timerActive}\r\n          setTimerActive={setTimerActive}\r\n          inCountdown={inCountdown}\r\n          setInCountdown={setInCountdown}\r\n          setIndex={setIndex}\r\n          words={randomWords}             \r\n          index={index}\r\n          countdownToggleChecked={countdownToggleChecked}\r\n          setCountdownToggleChecked={setCountdownToggleChecked}\r\n          newWords={newWords}\r\n          accountInfo={accountInfo}\r\n          setAccountInfo={setAccountInfo}\r\n          loggedIn={loggedIn}\r\n          updateAccInfo={updateAccInfo}\r\n          timer={timer}\r\n          setTimer={setTimer}\r\n          numEntries={numEntries}\r\n          setNumEntries={setNumEntries}\r\n          WPMTime={WPMTime}\r\n          setWPMTime={setWPMTime}\r\n          grossWPM={grossWPM}\r\n        />\r\n\r\n */\r\n\r\nexport const TypingTest = (props) => {\r\n    const [staticCountdown, setStaticCountdown] = useState(15);\r\n    const [countdown, setCountdown] = useState(1);\r\n    const [choppedCurrentLine, setChoppedCurrentLine] = useState(\"\");    //setting its use state\r\n    const [lineIndex, setLineIndex] = useState(0)\r\n    const [timer, setTimer] = useState(15);\r\n    const [timerActive, setTimerActive] = useState(false);\r\n    const [countdownToggleChecked, setCountdownToggleChecked] = useState(true);\r\n    const [inCountdown, setInCountdown] = useState(false)\r\n    const [currentLineLength, setCurrentLineLength] = useState(0);\r\n\r\n    const [randomWords, setCurrentRandomWords] = useState(\" \");    //setting its use state\r\n    const [nextUpRandomWords, setNextUpRandomWords] = useState(\" \");\r\n    var randWordsFunc = require('random-words');          //Must require random-words\r\n\r\n\r\n    function newWords() {\r\n        var startingLine = getNewWordsLine()\r\n        var nextUpLine = getNewWordsLine()\r\n\r\n        setCurrentRandomWords(startingLine);\r\n        setNextUpRandomWords(chopLineToLength(nextUpLine))\r\n        console.log(startingLine)\r\n    }\r\n\r\n    useEffect(() => {   //using another useEffect so random words does not refresh everytime.\r\n\r\n        newWords();  //Setting how many words given for the test right here.\r\n        \r\n    }, [])\r\n\r\n/**\r\n * @function reset\r\n * @description resets information variables related to running the typing test\r\n */\r\n\r\nfunction reset() {\r\n    setTimerActive(false);\r\n    props.setIndex(0);\r\n    setLineIndex(0)\r\n    setTimer(staticCountdown);\r\n    setCountdown(1);\r\n    newWords();\r\n}\r\n\r\n/**\r\n * \r\n * @param {any} callback used to callback to previous referance of page\r\n * @param {any} delay amount to be delayed\r\n * @function useInterval\r\n * @description Used to set a delay/countdown that is persistant over react renders\r\n */\r\nfunction useInterval(callback, delay) {\r\n\r\n    const savedCallback = useRef();\r\n\r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    // Set up the interval.\r\n    useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current();\r\n        }\r\n        if (delay !== null) {\r\n            let id = setInterval(tick, delay);\r\n            return () => clearInterval(id);\r\n        }\r\n    }, [delay]);\r\n}\r\n\r\nconst setCount = (count) => {\r\n    if (!timerActive) {\r\n        setStaticCountdown(count);\r\n        setTimer(count);\r\n    }\r\n};\r\n\r\nfunction chopLineToLength(wordString) {\r\n    var trimmedString = wordString.substring(0, 60)\r\n\r\n    // If we do not chop perfectly at end of word\r\n    if (wordString[60] !== \" \") {\r\n        var lastIndex = trimmedString.lastIndexOf(\" \")\r\n        trimmedString = trimmedString.substring(0, lastIndex)\r\n    }\r\n    return trimmedString\r\n}\r\n\r\nfunction getNewWordsLine() {\r\n    const words = randWordsFunc({ exactly: 20, join: ' ' });\r\n    const letters = words.length;\r\n    console.log(\"letter\", letters, \"words\", 13);\r\n\r\n    return words\r\n}\r\n\r\nfunction onLineChange() {\r\n    setCurrentRandomWords(nextUpRandomWords)\r\n    setNextUpRandomWords(chopLineToLength(getNewWordsLine()))\r\n    setLineIndex(0)\r\n}\r\n\r\nuseEffect(() => {\r\n\r\n    document.addEventListener('keydown', onKeyPress);\r\n\r\n    if (timer === 0 && !timerActive) {\r\n        props.setUpdateOnce(true);\r\n    }\r\n\r\n    if (!props.timerActive) {\r\n        setChoppedCurrentLine(chopLineToLength(randomWords))\r\n        setCurrentLineLength(choppedCurrentLine.length)\r\n    } else if (lineIndex === choppedCurrentLine.length - 1) {\r\n        reset()\r\n    }\r\n\r\n    return () => {\r\n        document.removeEventListener('keydown', onKeyPress);\r\n    };\r\n}, [randomWords, nextUpRandomWords, lineIndex, timerActive, inCountdown])\r\n\r\nconst onKeyPress = (event) => {\r\n\r\n    switch (event.key) {\r\n\r\n        case \"Enter\":\r\n            // setUpdateOnce(true);\r\n            if (!timerActive) {\r\n                setTimerActive(true);\r\n                if (countdownToggleChecked)\r\n                    setInCountdown(true);\r\n                else\r\n                    setInCountdown(false);\r\n            }\r\n            break;\r\n\r\n        case \"Escape\":\r\n            console.log(\"correct\");\r\n            break;\r\n        //EDITED TO MAKE LETTER MISSES UPDATE\r\n        default:\r\n            if (timerActive && !inCountdown) {\r\n                console.log(event.key + \" \" + randomWords[lineIndex])\r\n                if (event.key === randomWords[lineIndex]) {\r\n\r\n                    setLineIndex((lineIndex) => lineIndex + 1)\r\n                    props.setIndex((index) => index + 1);\r\n\r\n                    if (lineIndex === currentLineLength - 1) {\r\n                        onLineChange()\r\n                    }\r\n\r\n                } else if (event.key != randomWords[lineIndex] && props.loggedIn) {\r\n                    props.incrementMissed(randomWords[lineIndex]);\r\n                    // console.log(randomWords[index]);\r\n                    // console.log(accountInfo.letter_misses);\r\n                }\r\n            }\r\n            break;\r\n    }\r\n};\r\n\r\nuseInterval(() => {\r\n    if (!inCountdown && timer === 0) {\r\n        reset();\r\n\r\n    } else if (inCountdown) {\r\n        if (countdown === 1) {\r\n            setInCountdown(false);\r\n            props.setNumEntries(0);\r\n            props.setWPMTime(staticCountdown);\r\n        } else {\r\n            setCountdown(countdown => countdown - 1)\r\n        }\r\n    } else {\r\n        setTimer(timer => timer - 1);\r\n        props.setNumEntries(props.index);\r\n    }\r\n}, timerActive ? 1000 : null);\r\n\r\nreturn (\r\n    <div className=\"container\">\r\n        <div className=\"timer-wrapper\">\r\n            <div style={timerActive && !inCountdown ? { color: 'var(--selection-color)', textShadow: ' 0px 0px 9px var(--selection-color)' } : { color: 'var(--text-color)' }} className=\"timer\">\r\n                {timer}s\r\n            </div>\r\n\r\n            <div className=\"right-elements\">\r\n                <div className=\"timer-select\">\r\n                    <div onClick={() => setCount(15)} style={staticCountdown === 15 ? { color: 'var(--selection-color)', textShadow: ' 0px 0px 9px var(--selection-color)' } : null} className=\"time-button\">\r\n                        15\r\n                    </div>\r\n                    <div onClick={() => setCount(30)} style={staticCountdown === 30 ? { color: 'var(--selection-color)', textShadow: ' 0px 0px 9px var(--selection-color)' } : null} className=\"time-button\">\r\n                        30\r\n                    </div>\r\n                    <div onClick={() => setCount(45)} style={staticCountdown === 45 ? { color: 'var(--selection-color)', textShadow: ' 0px 0px 9px var(--selection-color)' } : null} className=\"time-button\">\r\n                        45\r\n                    </div>\r\n                    <div onClick={() => setCount(60)} style={staticCountdown === 60 ? { color: 'var(--selection-color)', textShadow: ' 0px 0px 9px var(--selection-color)' } : null} className=\"time-button\">\r\n                        60\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"word-base\">\r\n\r\n            {timerActive ? null : <div className=\"start-signal-wrapper\">\r\n\r\n                Correct Entries: {props.numEntries} <br />\r\n                Your WPM: {props.grossWPM()} <br /> <br />\r\n                <div className=\"start-signal\">\r\n                    Press Enter To Start!\r\n                </div>\r\n            </div>}\r\n            {timerActive && inCountdown && countdownToggleChecked ?\r\n                <div className=\"countdown\">\r\n                    Get Ready!\r\n                </div>\r\n                : null}\r\n            <div className=\"test-line-container\">\r\n                {choppedCurrentLine.split(\"\").map(function (char, idx) {\r\n                    return (\r\n                        <span key={idx}\r\n                            className={(idx < lineIndex) ? 'correct' : 'default'}\r\n                        >\r\n                            {(idx === lineIndex) ? <span className=\"cursor\" ></span> : <span />}\r\n                            {char}\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n            <div className=\"test-line-container next-up\">\r\n                {nextUpRandomWords}\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\n// Starting to introduce proptypes\r\nTypingTest.propTypes = {\r\n    timerActive: PropTypes.bool\r\n}\r\n\r\nexport default TypingTest;","import { useState, useEffect } from 'react';\r\n\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    console.log(e)\r\n\r\n    e.preventDefault();\r\n\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (Object.keys(errors).length === 0 && isSubmitting) {\r\n        callback();\r\n      }\r\n    },\r\n    [errors]\r\n  );\r\n\r\n  return { handleChange, handleSubmit, values, errors };\r\n};\r\n\r\nexport default useForm;","export default function validateInfo(values) {\r\n    let errors = {};\r\n\r\n    if (!values.username.trim()) {\r\n        errors.username = 'Username required';\r\n    }\r\n    // else if (!/^[A-Za-z]+/.test(values.name.trim())) {\r\n    //   errors.name = 'Enter a valid name';\r\n    // }\r\n\r\n    if (!values.email) {\r\n        errors.email = 'Email required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n        errors.email = 'Email address is invalid';\r\n    }\r\n    if (!values.password) {\r\n        errors.password = 'Password is required';\r\n    } else if (values.password.length < 4) {\r\n        errors.password = 'Password needs to be 4 characters or more';\r\n    }\r\n\r\n    if (!values.password2) {\r\n        errors.password2 = 'Password is required';\r\n    } else if (values.password2 !== values.password) {\r\n        errors.password2 = 'Passwords do not match';\r\n    }\r\n    return errors;\r\n}","import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport useForm from '../../../../utils/useForm';\r\nimport validate from '../../../../utils/validateInfo'\r\nimport '../../../../styles/SignInModal.css'\r\nimport { useSpring, animated } from 'react-spring';\r\nimport { MdClose } from 'react-icons/md';\r\nimport GoogleLogin from 'react-google-login';\r\n// import * as db from '../utils/dbUtils.js';\r\nimport sha256 from 'crypto-js/sha256';\r\n\r\nimport * as api from '../../../../utils/apiUtils.js'\r\n\r\n/**\r\n * @module SignInModal\r\n * @param {Function} onLogin\r\n * @param {Boolean} showSignIn\r\n * @param {Function} setShowSignIn\r\n * @description Popup modal that displays sign in instructions\r\n * @returns Component to be displayed\r\n * @example\r\n * <SignInModal onLogin={onLogin} showSignIn={showSignIn} setShowSignIn={setShowSignIn} />\r\n */\r\n\r\nconst SignInModal = ({ onLogin, showSignIn, setShowSignIn }) => {\r\n\r\n    const modalRef = useRef();\r\n\r\n    const [showSignUp, setShowSignUp] = useState(false);\r\n    \r\n\r\n\r\n    /**\r\n     * @function login\r\n     * @description Api call to log in and passes result to onLogin()\r\n     */\r\n    const login = (email) => {\r\n        onLogin(api.callLogin(email));\r\n    }\r\n\r\n    /**\r\n     * @function register\r\n     * @description Api call to register new account and passes result to onLogin()\r\n     */\r\n    const register = () => {\r\n        onLogin(api.callRegisterAccount(values.email, values.username, values.password));\r\n    }\r\n\r\n     /**\r\n     * @function HashedEmail\r\n     * @description Api call to log in but the email is HASHED and passes result to onLogin(). THIS IS A WORKING METHOD TO BE USED IN THE FUTURE\r\n     \r\n      const register = () => {\r\n        onLogin(api.callLogin(hash(values.email));\r\n    } */\r\n\r\n    /**\r\n     * @function submitForm\r\n     * @description Method that is activated on signin/register button press, login or registers account\r\n     */\r\n    function submitForm() {\r\n        if (!showSignUp) {\r\n            console.log(\"Login Pressed\");\r\n            login();\r\n        } else if (showSignUp) {\r\n            console.log(\"SignUp Pressed\");\r\n            register();\r\n        }\r\n\r\n        setShowSignIn(false);\r\n        values.email = '';\r\n        values.username = '';\r\n        values.password = '';\r\n        values.password2 = '';\r\n    }\r\n\r\n    const { handleChange, handleSubmit, values, errors } = useForm(\r\n        submitForm,\r\n        validate\r\n    );\r\n\r\n\r\n    /**\r\n     * @function openSignUp\r\n     * @description Flips boolean value to show signup insead of register\r\n     */\r\n    const openSignUp = () => {\r\n        setShowSignUp(prev => !prev);\r\n    };\r\n\r\n    /**\r\n     * @function closeModal\r\n     * @param {Event} e \r\n     * @description Closes current modalRef\r\n     */\r\n    const closeModal = e => {\r\n        if (modalRef.current === e.target) {\r\n            setShowSignIn(false);\r\n        }\r\n    };\r\n\r\n    const keyPress = useCallback(\r\n        e => {\r\n            if (e.key === 'Escape' && showSignIn) {\r\n                setShowSignIn(false);\r\n                console.log('I pressed');\r\n            }\r\n        },\r\n        [setShowSignIn, showSignIn]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            document.addEventListener('keydown', keyPress);\r\n            // db.initCon();\r\n\r\n            return () => document.removeEventListener('keydown', keyPress);\r\n        },\r\n        [keyPress]\r\n    );\r\n\r\n    const responseGoogle = response => {\r\n        console.log(response);\r\n        console.log(response.profileObj.email)\r\n        login(response.profileObj.email)\r\n        //after login in on google login, we call login\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {showSignIn ? (\r\n                <div className='Background' onClick={closeModal} ref={modalRef}>\r\n\r\n                    <animated.div >\r\n                            <div className='ModalWrapper' showSignIn={showSignIn}>\r\n                                <MdClose\r\n                                    aria-label='Close modal'\r\n                                    className='close-modal'\r\n                                    onClick={() => setShowSignIn(prev => !prev)}\r\n                                />\r\n                                <div className='ModalContent'>\r\n\r\n                                    <GoogleLogin\r\n                                        clientId=\"568691465172-6a0kbo3t147jc4oi2bfomq8fjcq6cj2k.apps.googleusercontent.com\"\r\n                                        buttonText=\"Login with Google\"\r\n                                        onSuccess={responseGoogle}\r\n                                        onFailure={responseGoogle}\r\n                                        cookiePolicy=\"single_host_origin\" />  \r\n                                </div>\r\n                            </div>\r\n                    </animated.div>\r\n                </div>\r\n            ) : null}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignInModal\r\n","import React from 'react'\r\nimport '../../../styles/TitleBar.css'\r\nimport { MdRemove, MdCropSquare, MdClose } from 'react-icons/md'\r\n\r\n/**\r\n * @module TitleBar\r\n * @param {Boolean} loggedIn\r\n * @param {Function} openSignIn\r\n * @description Titlebar that is displayed at the very top of the application\r\n * @returns Component to be displayed\r\n * @example\r\n * <TitleBar loggedIn={loggedIn} openSignIn={openSignIn} />\r\n */\r\n\r\nconst TitleBar = ({ loggedIn, openSignIn }) => {\r\n    return (\r\n        <div>\r\n            <header className=\"titlebar\">\r\n                <div className=\"drag-region\">\r\n\r\n                    <div className=\"window-controls\">\r\n\r\n                        {loggedIn ? null :\r\n                            <div onClick={openSignIn} className=\"login-button\">\r\n                                Login\r\n                            </div>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TitleBar\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n/**\r\n * @module ColoredLine\r\n * @param {String} color\r\n * @description A styled line that can change color\r\n * @returns Component to be displayed\r\n * @example\r\n * <ColoredLine color=\"#5B5A99\" />\r\n */\r\n\r\nconst ColoredLine = ({ color, width }) => {\r\n    return (\r\n        <hr\r\n            style={{\r\n                color: color,\r\n                backgroundColor: color,\r\n                height: 1,\r\n                width: width,\r\n                border: 'none',\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nColoredLine.propTypes = {\r\n    color: PropTypes.string,\r\n    width: PropTypes.string\r\n}\r\n\r\nexport default ColoredLine\r\n","import React from 'react'\r\nimport '../../../styles/TaskBar.css'\r\nimport { MdAccountCircle, MdSettings, MdKeyboard, MdFitnessCenter, MdPublic } from \"react-icons/md\"\r\nimport { Link } from 'react-router-dom'\r\nimport ColoredLine from '../../SettingsPage/ColoredLine'\r\nimport { IoIosPeople } from \"react-icons/io\"\r\nimport PropTypes from 'prop-types'\r\n\r\n/**\r\n * @module TaskBar\r\n * @param {Number} page\r\n * @param {Function} setPage\r\n * @description TaskBar that is is fixed to the leftmost portion of application\r\n * @returns Component to be displayed\r\n * @example\r\n * <TaskBar page={page} setPage={setPage} />\r\n */\r\n\r\nconst TaskBar = ({ page, setPage, loggedIn, setShowFriendList, showFriendList }) => {\r\n    return (\r\n        <div className=\"tb-wrapper\">\r\n            <div className=\"top-group\">\r\n                <Link to=\"\">\r\n                    <MdKeyboard onClick={() => setPage(0)} style={page === 0 ? { color: 'var(--selection-color)', filter: 'drop-shadow(0px 0px 8px var(--selection-color)' } : null} className='tb-button' />\r\n                </Link>\r\n                <Link to=\"/training\">\r\n                    <MdFitnessCenter onClick={() => setPage(2)} style={page === 2 ? { color: 'var(--selection-color', filter: 'drop-shadow(0px 0px 8px var(--selection-color)' } : null} className='tb-button' />\r\n                </Link>\r\n                <Link to=\"/multiplayer\">\r\n                    <MdPublic onClick={() => setPage(3)} style={page === 3 ? { color: 'var(--selection-color', filter: 'drop-shadow(0px 0px 8px var(--selection-color)' } : null} className='tb-button' />\r\n                </Link>\r\n                {loggedIn ?\r\n                    <div>\r\n                        <ColoredLine color=\"var(--primary-color)\" width='70%' />\r\n                        <div>\r\n                            <IoIosPeople onClick={() => setShowFriendList(true)} style={ showFriendList ? { color: 'var(--selection-color', filter: 'drop-shadow(0px 0px 8px var(--selection-color)' } : null} className='tb-button' />\r\n                        </div>\r\n                    </div>\r\n                    : null}\r\n\r\n            </div>\r\n            <div className=\"bottom-group\">\r\n                <Link to=\"account\">\r\n                    <MdAccountCircle onClick={() => setPage(1)} style={page === 1 ? { color: 'var(--selection-color', filter: 'drop-shadow(0px 0px 8px var(--selection-color)' } : null} className=\"tb-button\" />\r\n                </Link>\r\n                <Link to=\"settings\">\r\n                    <MdSettings onClick={() => setPage(4)} style={page === 4 ? { color: 'var(--selection-color', filter: 'drop-shadow(0px 0px 8px var(--selection-color)' } : null} className=\"tb-button\" />\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nTaskBar.propTypes = {\r\n    page: PropTypes.number,\r\n    setPage: PropTypes.func,\r\n    loggedIn: PropTypes.bool,\r\n    setShowFriendList: PropTypes.func,\r\n    showFriendList: PropTypes.bool\r\n}\r\n\r\nexport default TaskBar\r\n","import React from 'react'\r\nimport \"../../styles/SingleStatDisplay.css\"\r\n\r\n/**\r\n * @module SingleStatDisplay\r\n * @param {String} title\r\n * @param {Number} data\r\n * @description Single tile to display a piece of data and its title\r\n * @returns Component to be displayed\r\n * @example\r\n * <SingleStatDisplay title=\"Top WPM\" data={accountInfo.top_wpm == null ? 0 : Number(accountInfo.top_wpm).toFixed(2)\r\n */\r\n\r\nconst SingleStatDisplay = ({title, data}) => {\r\n    return (\r\n        <div className=\"ssd-base\">\r\n            <div className=\"title\">\r\n                {title}\r\n            </div>\r\n            <div className=\"data\">\r\n                {data}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleStatDisplay\r\n","export default __webpack_public_path__ + \"static/media/keyboard_shell.27fae057.png\";","import React from 'react'\r\nimport '../../styles/StatKeyboard.css'\r\nimport Image from \"../../assets/keyboard_shell.png\"\r\n\r\n\r\n/**\r\n * @module StatKeyboard\r\n * @param {JSON} letter_misses \r\n * @description Keyboard graphic that is displayed showing colored representation of letter misses\r\n * @returns Component to be displayed\r\n * @example\r\n * <StatKeyboard letter_misses={accountInfo.letter_misses} />\r\n */\r\n\r\nconst StatKeyboard = ({ letter_misses }) => {\r\n\r\n    var total = null;\r\n    var max = null;\r\n    const map = JSON.parse(letter_misses);\r\n\r\n    /**\r\n     * @function calcTotal\r\n     * @description Finds max missed letter and sorts letter map in decending order\r\n     */\r\n    const calcTotal = () => {\r\n        total = 0;\r\n        max = Number.MIN_SAFE_INTEGER;\r\n        Object.keys(map).map(el => {\r\n            total += map[el];\r\n            max = (max < map[el]) ? map[el] : max;\r\n        });\r\n        //console.log(total);\r\n    }\r\n\r\n    /**\r\n     * @function getColor\r\n     * @param {Number} key \r\n     * @description Returns color to be displayed for current letter\r\n     * @returns String HEX color value\r\n     */\r\n    const getColor = (key) => {\r\n\r\n        const ratio = map[key] / max;\r\n\r\n        if (ratio === 1) {\r\n            return '#f25c54';\r\n        } else if (ratio >= .50) {\r\n            return '#FFA34E';\r\n        } else if (ratio >= .25) {\r\n            return '#f4845f';\r\n        } else if (ratio >= .10) {\r\n            return '#2dc653';\r\n        } else if (ratio > 0) {\r\n            return '#6ede8a';\r\n        } else {\r\n            return '#92e6a7';\r\n        }\r\n\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    return (\r\n        <div className=\"keyboard-base\">\r\n            <div style={{ backgroundColor: getColor(\"q\") }} className=\"key\" id=\"q\" />\r\n            <div style={{ backgroundColor: getColor(\"w\") }} className=\"key\" id=\"w\" />\r\n            <div style={{ backgroundColor: getColor(\"e\") }} className=\"key\" id=\"e\" />\r\n            <div style={{ backgroundColor: getColor(\"r\") }} className=\"key\" id=\"r\" />\r\n            <div style={{ backgroundColor: getColor(\"t\") }} className=\"key\" id=\"t\" />\r\n            <div style={{ backgroundColor: getColor(\"y\") }} className=\"key\" id=\"y\" />\r\n            <div style={{ backgroundColor: getColor(\"u\") }} className=\"key\" id=\"u\" />\r\n            <div style={{ backgroundColor: getColor(\"i\") }} className=\"key\" id=\"i\" />\r\n            <div style={{ backgroundColor: getColor(\"o\") }} className=\"key\" id=\"o\" />\r\n            <div style={{ backgroundColor: getColor(\"p\") }} className=\"key\" id=\"p\" />\r\n            <div style={{ backgroundColor: getColor(\"a\") }} className=\"key\" id=\"a\" />\r\n            <div style={{ backgroundColor: getColor(\"s\") }} className=\"key\" id=\"s\" />\r\n            <div style={{ backgroundColor: getColor(\"d\") }} className=\"key\" id=\"d\" />\r\n            <div style={{ backgroundColor: getColor(\"f\") }} className=\"key\" id=\"f\" />\r\n            <div style={{ backgroundColor: getColor(\"g\") }} className=\"key\" id=\"g\" />\r\n            <div style={{ backgroundColor: getColor(\"h\") }} className=\"key\" id=\"h\" />\r\n            <div style={{ backgroundColor: getColor(\"j\") }} className=\"key\" id=\"j\" />\r\n            <div style={{ backgroundColor: getColor(\"k\") }} className=\"key\" id=\"k\" />\r\n            <div style={{ backgroundColor: getColor(\"l\") }} className=\"key\" id=\"l\" />\r\n            <div style={{ backgroundColor: getColor(\"z\") }} className=\"key\" id=\"z\" />\r\n            <div style={{ backgroundColor: getColor(\"x\") }} className=\"key\" id=\"x\" />\r\n            <div style={{ backgroundColor: getColor(\"c\") }} className=\"key\" id=\"c\" />\r\n            <div style={{ backgroundColor: getColor(\"v\") }} className=\"key\" id=\"v\" />\r\n            <div style={{ backgroundColor: getColor(\"b\") }} className=\"key\" id=\"b\" />\r\n            <div style={{ backgroundColor: getColor(\"n\") }} className=\"key\" id=\"n\" />\r\n            <div style={{ backgroundColor: getColor(\"m\") }} className=\"key\" id=\"m\" />\r\n            <img className=\"keyboard-img\" src={Image} />\r\n            <div className=\"key1\" id=\"q\" />\r\n            <div className=\"key1\" id=\"w\" />\r\n            <div className=\"key1\" id=\"e\" />\r\n            <div className=\"key1\" id=\"r\" />\r\n            <div className=\"key1\" id=\"t\" />\r\n            <div className=\"key1\" id=\"y\" />\r\n            <div className=\"key1\" id=\"u\" />\r\n            <div className=\"key1\" id=\"i\" />\r\n            <div className=\"key1\" id=\"o\" />\r\n            <div className=\"key1\" id=\"p\" />\r\n            <div className=\"key1\" id=\"a\" />\r\n            <div className=\"key1\" id=\"s\" />\r\n            <div className=\"key1\" id=\"d\" />\r\n            <div className=\"key1\" id=\"f\" />\r\n            <div className=\"key1\" id=\"g\" />\r\n            <div className=\"key1\" id=\"h\" />\r\n            <div className=\"key1\" id=\"j\" />\r\n            <div className=\"key1\" id=\"k\" />\r\n            <div className=\"key1\" id=\"l\" />\r\n            <div className=\"key1\" id=\"z\" />\r\n            <div className=\"key1\" id=\"x\" />\r\n            <div className=\"key1\" id=\"c\" />\r\n            <div className=\"key1\" id=\"v\" />\r\n            <div className=\"key1\" id=\"m\" />\r\n            <div className=\"key1\" id=\"b\" />\r\n            <div className=\"key1\" id=\"n\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatKeyboard\r\n","import React from 'react'\r\nimport '../../styles/Account.css'\r\nimport SingleStatDisplay from './SingleStatDisplay.js'\r\nimport StatKeyboard from './StatKeyboard.js'\r\n\r\n/**\r\n * @module Account\r\n * @param {Object} accountInfo\r\n * @description Account page that is displayed when logged in, shows statistics and graphics related to typing activity\r\n * @returns Component to be displayed\r\n * @example\r\n * <Account accountInfo={accountInfo} />\r\n */\r\n\r\n\r\nconst Account = ({ accountInfo }) => {\r\n\r\n    var jObj = JSON.parse(accountInfo.letter_misses);\r\n    console.log(Object.entries(jObj).sort((a,b) => b[1]-a[1]));\r\n    //var topWPM = accountInfo.top_wpm;\r\n    var sortedMisses = Object.entries(jObj).sort((a,b) => b[1]-a[1]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"acc-id\">\r\n                Account Statistics\r\n            </div>\r\n            <div className=\"stat-container\">\r\n\r\n                <div className=\"stats-wing\" >\r\n                    <SingleStatDisplay title=\"Top WPM\" data={accountInfo.top_wpm == null ? 0 : Number(accountInfo.top_wpm).toFixed(2)} />\r\n                    <SingleStatDisplay title=\"Avg WPM\" data={accountInfo.avg_wpm == null ? 0 : accountInfo.avg_wpm.toFixed(2)} />\r\n                </div>\r\n                <StatKeyboard letter_misses={accountInfo.letter_misses} />\r\n                <div className=\"stats-wing\">\r\n                    <SingleStatDisplay title=\"Most Missed\" data={sortedMisses[0][0].toUpperCase()} />\r\n                    <SingleStatDisplay title=\"Least Missed\" data={sortedMisses[25][0].toUpperCase()} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account\r\n","import React from 'react'\r\nimport '../../styles/OfflineAccount.css'\r\nimport { MdLock } from 'react-icons/md'\r\n\r\n/**\r\n * @module OfflineAccount\r\n * @description Component that is shown in place of the statistics page if account is logged out\r\n * @returns Component to be displayed\r\n * @example\r\n * <OfflineAccount />\r\n */\r\n\r\nconst OfflineAccount = () => {\r\n    return (\r\n        <div className=\"oa-wrapper\">\r\n            <MdLock style={{color: 'var(--selection-color)'}}/>\r\n            Please Login to view account statistics\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OfflineAccount\r\n","import React from 'react'\r\nimport '../../styles/Training.css'\r\n\r\nconst Training = () => {\r\n    return (\r\n        <div className=\"tr-base\">\r\n            <div>\r\n                New Mode Coming Soon!\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Training\r\n","import React from 'react'\r\nimport '../../styles/AccountTile.css'\r\nimport { MdAccountBox, MdRemoveRedEye } from 'react-icons/md'\r\n\r\n/**\r\n * @module AccountTile\r\n * @param {Object} accountInfo\r\n * @param {Function} logout\r\n * @description Display of basic account info in a single tile\r\n * @returns Component to be displayed\r\n * @example\r\n * <AccountTile accountInfo={accountInfo} logout={logout} />\r\n */\r\n\r\n\r\nconst AccountTile = ({ accountInfo, logout }) => {\r\n   console.log(\"ac: \" + accountInfo);\r\n\r\n    return (\r\n        \r\n        <div className=\"base\">\r\n            <div className=\"account-photo\">\r\n                <MdAccountBox className=\"account-icon\" />\r\n            </div>\r\n            <div className=\"account-info\">\r\n                <div className=\"acc-name\">ID: {accountInfo.display_name}</div>\r\n                <div className=\"acc-email\">\r\n                    Email: {accountInfo.user_email}\r\n                    </div>\r\n                <div className=\"acc-email\">\r\n                    <div>Password: {accountInfo.password}</div>\r\n                    <MdRemoveRedEye />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div onClick={logout} className=\"logout\">\r\n                    Logout\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountTile\r\n","import React from 'react'\r\nimport '../../styles/SettingsLoginTile.css'\r\nimport { MdLock } from 'react-icons/md'\r\n/**\r\n * @module SettingsLoginTile\r\n * @component SettingsLoginTile\r\n * @description Tile to be displayed in the settings page if not logged in\r\n * @returns Component to be displayed\r\n * @example\r\n * <SettingsLoginTile />\r\n */\r\n\r\n\r\nconst SettingsLoginTile = () => {\r\n    return (\r\n        <div className=\"slt-wrapper\">\r\n            <MdLock style={{color: 'var(--selection-color)', padding: '1em'}}/>\r\n            <div className=\"slt-text\">\r\n                Login to view account settings\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SettingsLoginTile\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Popup from 'reactjs-popup'\r\n\r\nconst ThemeContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`\r\n\r\nconst ThemeTitle = styled.div`\r\n    padding-bottom: .5em;\r\n`\r\n\r\nconst BaseThemeBox = styled.div`\r\n    background: ${props => props.background};\r\n    border-radius: 10%;\r\n    border-style: solid;\r\n    border-color: ${props => props.border};\r\n    color: ${props => props.text};\r\n    width: 6em;\r\n    text-align: center;\r\n    padding-top: 2em;\r\n    padding-bottom: 2.25em;\r\n    vertical-align: center;\r\n    font-size: 1em;\r\n    margin-left: .5em;\r\n    margin-right: .5em;\r\n      &:hover{\r\n        transition: .25s;\r\n        color: ${props => props.border};\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nconst ChangeTheme = styled.div`\r\n    margin-left: .5em;\r\n    margin-right: .5em;\r\n    margin-top: 1em;\r\n    padding: .5em;\r\n    border-radius: .5em;\r\n    border: 0px;\r\n    font-size: .5em;\r\n    background: var(--primary-color);\r\n    color: var(--text-color); \r\n    &:hover{\r\n        transition: .25s;\r\n        color: var(--selection-color);\r\n        cursor: pointer;\r\n    }\r\n`\r\nconst StyledPopup = styled(Popup)`\r\n    \r\n  // use your custom style for \".popup-overlay\"\r\n  &-overlay {\r\n    backdrop-filter: blur(10px);\r\n  }\r\n  // use your custom style for \".popup-content\"\r\n  &-content {\r\n    padding: 1em;\r\n    background: var(--primary-color);\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-row-gap: 1em;\r\n    border-style: solid;\r\n    border-color: var(--selection-color);\r\n  } \r\n`;\r\n\r\n\r\nconst ThemeSelect = () => {\r\n\r\n    const [themeName, setThemeName] = useState(document.documentElement.getAttribute('data-theme'))\r\n\r\n    const changeTheme = (theme) => {\r\n        document.documentElement.setAttribute('data-theme', theme);\r\n        setThemeName(document.documentElement.getAttribute('data-theme'))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ThemeTitle>Theme</ThemeTitle>\r\n            <ThemeContainer>\r\n                <BaseThemeBox\r\n                    background=\"var(--bg-color)\"\r\n                    border=\"var(--selection-color)\"\r\n                    text=\"var(--text-color)\">\r\n                    {themeName}\r\n                </BaseThemeBox>\r\n            </ThemeContainer>\r\n            <StyledPopup\r\n                trigger={<ChangeTheme>Change Theme</ChangeTheme>}\r\n                position=\"center\"\r\n                modal\r\n                closeOnDocumentClick\r\n            >\r\n                <BaseThemeBox\r\n                    background=\"#262353\"\r\n                    border=\"#50E3C2\"\r\n                    text=\"#75749C\"\r\n                    onClick={() => changeTheme('default')}>\r\n                    default\r\n                </BaseThemeBox>\r\n                <BaseThemeBox\r\n                    background=\"#282A36\"\r\n                    border=\"#BD93F9\"\r\n                    text=\"#6272A4\"\r\n                    onClick={() => changeTheme('dracula')}>\r\n                    dracula\r\n                </BaseThemeBox>\r\n                <BaseThemeBox\r\n                    background=\"#282828\"\r\n                    border=\"#FE8019\"\r\n                    text=\"#928374\"\r\n                    onClick={() => changeTheme('gruvbox')}>\r\n                    gruvbox\r\n                </BaseThemeBox>\r\n                <BaseThemeBox\r\n                    background=\"#562135\"\r\n                    border=\"#FFE7DE\"\r\n                    text=\"#E9B1CD\"\r\n                    onClick={() => changeTheme('sakura')}>\r\n                    sakura\r\n                </BaseThemeBox>\r\n                <BaseThemeBox\r\n                    background=\"#060621\"\r\n                    border=\"#f280c6\"\r\n                    text=\"#6688c1\"\r\n                    onClick={() => changeTheme('abyss')}>\r\n                    abyss\r\n                </BaseThemeBox>\r\n                <BaseThemeBox\r\n                    background=\"#221a0f\"\r\n                    border=\"#a63058\"\r\n                    text=\"#a57a4c\"\r\n                    onClick={() => changeTheme('kimbie')}>\r\n                    kimbie\r\n                </BaseThemeBox>\r\n                <BaseThemeBox\r\n                    background=\"#272822\"\r\n                    border=\"#b67534\"\r\n                    text=\"#888456\"\r\n                    onClick={() => changeTheme('monokai')}>\r\n                    monokai\r\n                </BaseThemeBox>\r\n                <BaseThemeBox\r\n                    background=\"#111111\"\r\n                    border=\"#ce916b\"\r\n                    text=\"#efffff\"\r\n                    onClick={() => changeTheme('contrast')}>\r\n                    contrast\r\n                </BaseThemeBox>\r\n                <BaseThemeBox\r\n                    background=\"#f3f3f3\"\r\n                    border=\"#007acc\"\r\n                    text=\"#999999\"\r\n                    onClick={() => changeTheme('light')}>\r\n                    light\r\n                </BaseThemeBox>\r\n                <BaseThemeBox\r\n                    background=\"#d5d6db\"\r\n                    border=\"#71b6bd\"\r\n                    text=\"#5c626d\"\r\n                    onClick={() => changeTheme('tokyo-light')}>\r\n                    tokyo-light\r\n                </BaseThemeBox>\r\n                <BaseThemeBox\r\n                    background=\"#1f2335\"\r\n                    border=\"#3d59a1\"\r\n                    text=\"#c0caf5\"\r\n                    onClick={() => changeTheme('tokyo-dark')}>\r\n                    tokyo-dark\r\n                </BaseThemeBox>\r\n                <BaseThemeBox\r\n                    background=\"#122738\"\r\n                    border=\"#fbc401\"\r\n                    text=\"#a5a6a7\"\r\n                    onClick={() => changeTheme('cobalt')}>\r\n                    cobalt\r\n                </BaseThemeBox>\r\n            </StyledPopup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeSelect","import React from 'react'\r\nimport '../../styles/Settings.css'\r\nimport ColoredLine from './ColoredLine'\r\nimport AccountTile from './AccountTile'\r\nimport SettingsLoginTile from './SettingsLoginTile'\r\nimport ThemeSelect from './ThemeSelect'\r\n\r\n/**\r\n * @module Settings\r\n * @component Settings\r\n * @param {Object} accountInfo\r\n * @param {Function} logout\r\n * @param {Boolean} loggedIn\r\n * @description Settings page that is displayed if an account is logged in\r\n * @returns Component to be displayed\r\n * @example\r\n * <Settings accountInfo={accountInfo} logout={logout} loggedIn={loggedIn} />\r\n */\r\n\r\nconst Settings = ({ accountInfo, logout, loggedIn, setShowThemeOptions }) => {\r\n    return (\r\n        <div className=\"s-wrapper\">\r\n\r\n            <div className=\"s-title\">\r\n                Settings\r\n            </div>\r\n            <div className=\"s-line-spacing\">\r\n                <ColoredLine\r\n                 color=\"var(--primary-color)\"\r\n                 width='100%'\r\n                />\r\n            </div>\r\n            {loggedIn ? <AccountTile accountInfo={accountInfo} logout={logout} /> : <SettingsLoginTile />}\r\n            <div className=\"s-line-spacing\">\r\n                <ColoredLine \r\n                color=\"var(--primary-color)\"\r\n                width='100%' />\r\n            </div>\r\n            <div className=\"sub\">\r\n                Preferences\r\n            </div>\r\n            <div className=\"s-section\">\r\n                <ThemeSelect setShowThemeOptions={setShowThemeOptions} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings\r\n","import React from 'react'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from 'react-loader-spinner';\r\nimport \"../../../styles/LoadingSpinner.css\"\r\n\r\nconst LoadingSpinner = () => {\r\n    return (\r\n        <div className=\"loader-base\">\r\n            <div className=\"loader\">\r\n                <Loader\r\n                    type=\"ThreeDots\"\r\n                    color=\"#50E3C2\"\r\n                    height={200}\r\n                    width={200}\r\n                    timeout={4000} //4 secs\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingSpinner\r\n","import React, { useEffect, useRef, useState, useParams } from \"react\"\r\nimport io from \"socket.io-client\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\n\r\nexport const Lobby = (props) => {\r\n    var lobbyID = props.lobbyID\r\n    const [state, setState] = useState({ message: \"\", name: \"\" })\r\n    const [chat, setChat] = useState([])\r\n  \r\n    const socketRef = useRef()\r\n  \r\n    useEffect(\r\n      () => {\r\n        socketRef.current = io.connect(\"http://localhost:4000\")\r\n        socketRef.current.emit('switchLobby', { lobbyID })\r\n        socketRef.current.on('updateLobby', function(newLobby) {\r\n            socketRef.current.room = newLobby.lobbyID;\r\n          });\r\n        socketRef.current.on(\"message\", ({ name, message }, room) => {\r\n          setChat([...chat, { name, message }])\r\n        })\r\n        return () => socketRef.current.disconnect()\r\n      },\r\n      [chat]\r\n    )\r\n  \r\n    const onTextChange = (e) => {\r\n      setState({ ...state, [e.target.name]: e.target.value })\r\n    }\r\n  \r\n    const onMessageSubmit = (e) => {\r\n      const { name, message } = state\r\n      socketRef.current.emit(\"message\", { name, message }, socketRef.current.room)\r\n      e.preventDefault()\r\n      setState({ message: \"\", name })\r\n    }\r\n  \r\n    const renderChat = () => {\r\n      return chat.map(({ name, message }, index) => (\r\n        <div key={index}>\r\n          <h3>\r\n            {name}: <span>{message}</span>\r\n          </h3>\r\n        </div>\r\n      ))\r\n    }\r\n  \r\n    return (\r\n      <div className=\"card\">\r\n          <form onSubmit={onMessageSubmit}>\r\n            <h1>Lobby ID: {lobbyID}</h1>\r\n            <div className=\"name-field\">\r\n              <TextField name=\"name\" onChange={(e) => onTextChange(e)} value={state.name} label=\"Name\" />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                name=\"message\"\r\n                onChange={(e) => onTextChange(e)}\r\n                value={state.message}\r\n                id=\"outlined-multiline-static\"\r\n                variant=\"outlined\"\r\n                label=\"Message\"\r\n              />\r\n            </div>\r\n            <button>Send Message</button>\r\n          </form>\r\n          <div className=\"render-chat\">\r\n            <h1>Chat Log</h1>\r\n            {renderChat()}\r\n          </div>\r\n      </div>\r\n    )\r\n  }","//Modal.js\r\nimport React, { useRef } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nexport const Modal = ({ setShowModal, setJoinLobby, setLobbyID }) => {\r\n  // close the modal when clicking outside the modal.\r\n  const modalRef = useRef();\r\n  const closeModal = (e) => {\r\n    if (e.target === modalRef.current) {\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  function lobbySubmit() {\r\n    setLobbyID(document.getElementById('lobbyIdInput').value)\r\n    setJoinLobby(true)\r\n    setShowModal(false)\r\n  }\r\n\r\n  //render the modal JSX in the portal div.\r\n  return ReactDom.createPortal(\r\n    <div className=\"container\" ref={modalRef} onClick={closeModal}>\r\n      <div className=\"modal\">\r\n        <h2>Enter a Lobby ID</h2>\r\n        <input id=\"lobbyIdInput\"></input>\r\n        <button id=\"lobbySubmit\" onClick={() => lobbySubmit()}>Submit</button>\r\n        <button onClick={() => setShowModal(false)}>X</button>\r\n      </div>\r\n    </div>,\r\n    document.getElementById(\"portal\")\r\n  );\r\n};","import React, { useState } from \"react\"\r\nimport styled from 'styled-components'\r\nimport { Lobby } from './Lobby.js'\r\nimport { Modal } from './Modal.js'\r\n\r\nimport '../../styles/Modal.css'\r\nimport '../../styles/MultiplayerPage.css'\r\n\r\nconst Button = styled.button`\r\n  background: var(--primary-color);\r\n  border-radius: .2em;\r\n  border: 0px;\r\n  color: var(--text-color);\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  font-family: \"almarai\";\r\n  font-size: 2em;\r\n  &:hover{\r\n    transition: .25s;\r\n    color: var(--selection-color);\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst Multiplayer = () => {  \r\n  //Set lobby join state and update during button press\r\n  const [joinLobby, setJoinLobby] = useState(false)\r\n  const [lobbyID, setLobbyID] = useState(0)\r\n\r\n  //Enter lobby modal\r\n  const [showModal, setShowModal] = useState(false)\r\n  function findMatch() {\r\n    //find match code\r\n  }\r\n\r\n  function enterLobbyModal() {\r\n    setShowModal(true)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='multiplayer-base'>\r\n        <div>Multiplayer</div>\r\n        {joinLobby ? null : <Button onClick={findMatch} >Find Match</Button>}\r\n        {joinLobby ? null : <Button onClick={enterLobbyModal} >Join Custom Lobby</Button>}\r\n        {showModal ? <Modal setShowModal={setShowModal} setJoinLobby={setJoinLobby} setLobbyID={setLobbyID} /> : null}\r\n        {joinLobby ? <Lobby lobbyID={lobbyID}/> : null}\r\n      </div>\r\n      <div id='portal'></div>\r\n      <div id='hiddenLobbyId' css=\"display:none\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Multiplayer","import React, { useState, useEffect} from 'react';\r\nimport TypingTest from './components/TypingTestPage/TypingTest.js';\r\nimport SignInModal from './components/Base/TitleBar/SignInModal/SignInModal.js';\r\nimport TitleBar from './components/Base/TitleBar/TitleBar.js';\r\nimport TaskBar from './components/Base/TaskBar/TaskBar.js';\r\nimport './App.css';\r\nimport Account from './components/AccountPage/Account.js';\r\nimport OfflineAccount from './components/AccountPage/OfflineAccount.js';\r\nimport Training from './components/TrainingPage/Training.js';\r\nimport Settings from './components/SettingsPage/Settings.js';\r\nimport LoadingSpinner from './components/Base/LoadingSpinner/LoadingSpinner.js';\r\nimport * as api from './utils/apiUtils.js'\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport Multiplayer from './components/MultiplayerPage/Multiplayer.js';\r\n\r\n// Set default theme on first initialization\r\ndocument.documentElement.setAttribute('data-theme', 'default');\r\n\r\nfunction App() {\r\n\r\n\r\n  const [index, setIndex] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [showSignIn, setShowSignIn] = useState(false);\r\n  const [showThemeOptions, setShowThemeOptions] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [numEntries, setNumEntries] = useState(0);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [WPMTime, setWPMTime] = useState(1);\r\n  const [accountInfo, setAccountInfo] = useState({})\r\n  const [updateOnce, setUpdateOnce] = useState(false)\r\n\r\n  const [showFriendList, setShowFriendList] = useState(false)\r\n\r\n  const delay = ms => new Promise(res => setTimeout(res, ms));\r\n  const onLogin = async (account) => {\r\n\r\n    setLoading(true);\r\n\r\n    await (delay(4000));\r\n\r\n    setLoading(false);\r\n\r\n    console.log(account);\r\n    if (account.account_id !== -1) {\r\n      setAccountInfo(account);\r\n      setLoggedIn(true);\r\n    } else {\r\n      alert('Account does not exist');\r\n    }\r\n\r\n  }\r\n\r\n  function logout() {\r\n    setAccountInfo();\r\n    setLoggedIn(false);\r\n  }\r\n\r\n  //INCREMENTS MISSED LETTER AND UPDATES ACCINFO\r\n  function incrementMissed(letter) {\r\n    var jObj = JSON.parse(accountInfo.letter_misses);\r\n    jObj[letter] = jObj[letter] + 1;\r\n    setAccountInfo({ ...accountInfo, letter_misses: JSON.stringify(jObj) });\r\n\r\n  }\r\n  \r\n  async function updateApiStats(avgWPM, topWpm, total_words, total_time) {\r\n\r\n    console.log(\"Before Update Stats\",\r\n      avgWPM,\r\n      topWpm,\r\n      accountInfo)\r\n\r\n    api.updateStats(\r\n      avgWPM,\r\n      topWpm,\r\n      accountInfo.letter_misses,\r\n      total_words,\r\n      total_time,\r\n      accountInfo.account_id)\r\n  }\r\n\r\n  const updateAccInfo = (numEntries, WPMTime, grossWPM) => {\r\n\r\n    if (loggedIn) {\r\n\r\n      var totWords = accountInfo.total_words + (numEntries / 5);\r\n      var totTime = accountInfo.total_time + WPMTime;\r\n      var avgWPM = (totWords / totTime) * 60;\r\n      //setAccountInfo({ ...accountInfo, total_words: totWords, total_time: totTime });\r\n\r\n      if ((grossWPM > accountInfo.top_wpm) || (accountInfo.top_wpm == null)) {\r\n        console.log(\"Account Top Pre-Update wpm:\", accountInfo.top_wpm);\r\n        setAccountInfo({ ...accountInfo, top_wpm: grossWPM, total_words: totWords, total_time: totTime, avg_wpm: avgWPM });\r\n        console.log(\"Account Top Post-Update wpm:\", accountInfo.top_wpm);\r\n      } else {\r\n        grossWPM = accountInfo.top_wpm;\r\n        setAccountInfo({ ...accountInfo, total_words: totWords, total_time: totTime, avg_wpm: avgWPM });\r\n      }\r\n\r\n      //setAccountInfo({ ...accountInfo, avg_wpm: avgWPM });\r\n\r\n      console.log(avgWPM, totTime, totWords);\r\n\r\n      updateApiStats(avgWPM, grossWPM, totWords, totTime);\r\n    }\r\n  }\r\n\r\n  const grossWPM = () => {\r\n    var words = (numEntries / 5);\r\n    var wpm = ((words / WPMTime) * 60).toFixed(2);\r\n    return wpm;\r\n  };\r\n\r\n  const openSignIn = () => {\r\n    setShowSignIn(prev => !prev);\r\n  };\r\n\r\n  const emptyForNow = () => {\r\n\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', emptyForNow);\r\n\r\n    // if (timer === 0 && !timerActive && loggedIn) {\r\n    //   updateAccInfo(numEntries, WPMTime, grossWPM());\r\n    // }\r\n\r\n    if (updateOnce && loggedIn) {\r\n      updateAccInfo(numEntries, WPMTime, grossWPM());\r\n      setUpdateOnce(false);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', emptyForNow);\r\n    };\r\n  }, [accountInfo, index, page, numEntries, WPMTime, updateAccInfo, updateOnce])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"window\">\r\n        <div className=\"task-bar\">\r\n          <TaskBar \r\n            page={page}\r\n            setPage={setPage}\r\n            loggedIn={loggedIn}\r\n            setShowFriendList={setShowFriendList}\r\n            showFriendList={showFriendList} />\r\n        </div>\r\n        <div className=\"landing\">\r\n          <TitleBar loggedIn={loggedIn} openSignIn={openSignIn} />\r\n          <div className=\"main-window\">\r\n            {loading ? <LoadingSpinner /> : null}\r\n\r\n            <Routes>\r\n              <Route exact path=\"\" element={\r\n                <TypingTest\r\n                  setUpdateOnce={setUpdateOnce}\r\n                  setIndex={setIndex}\r\n                  index={index}\r\n                  accountInfo={accountInfo}\r\n                  setAccountInfo={setAccountInfo}\r\n                  loggedIn={loggedIn}\r\n                  incrementMissed={incrementMissed}\r\n                  updateAccInfo={updateAccInfo}\r\n                  numEntries={numEntries}\r\n                  setNumEntries={setNumEntries}\r\n                  WPMTime={WPMTime}\r\n                  setWPMTime={setWPMTime}\r\n                  grossWPM={grossWPM}\r\n                />\r\n              } />\r\n              <Route exact path=\"/training\" element={<Training />} />\r\n              <Route exact path=\"/multiplayer\" element={<Multiplayer />} />\r\n              <Route exact path=\"/account\" element={(loggedIn ? <Account accountInfo={accountInfo} /> : <OfflineAccount />)} />\r\n              <Route exact path=\"/settings\" element={<Settings setShowThemeOptions={setShowThemeOptions} accountInfo={accountInfo} logout={logout} loggedIn={loggedIn} />} />\r\n            </Routes>\r\n\r\n          </div>\r\n        </div>\r\n        <SignInModal onLogin={onLogin} showSignIn={showSignIn} setShowSignIn={setShowSignIn} />\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}